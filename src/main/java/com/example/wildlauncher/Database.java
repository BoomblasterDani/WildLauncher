package com.example.wildlauncher;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.sql.DriverManager;

public class Database {
    /*public Connection establishConnection() throws SQLException {
        Connection connection = null;
        try {
            connection = DriverManager.getConnection("jdbc:derby:applicationDB;create=true");
            connection.setAutoCommit(false);
            System.out.println("Connection to Database was successfull!");
        } catch (SQLException e) {
            e.printStackTrace();
            throw e;
        }
        return connection;
    }*/

    public static void createActivityTable() throws SQLException {
        Connection connection = DriverManager.getConnection("jdbc:derby:applicationDB;create=true");

        String CREATE_TABLE_SQL_INSTRUCTIONS = "CREATE TABLE APPLICATIONS (" +
                "ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY, " +
                "NAME VARCHAR(255), " +
                "PATH VARCHAR(255), " +
                "SCRIPTPATH VARCHAR(255), " +
                "PRIMARY KEY (ID))";
        try (Statement instructions = connection.createStatement()) {
            instructions.executeUpdate(CREATE_TABLE_SQL_INSTRUCTIONS);
            System.out.println("Table created");
        } catch (SQLException e) {
            if (e.getSQLState().equals("X0Y32")) {
                System.out.println("The Table 'APPLICATIONS' already exists.");

            } else {
                e.printStackTrace();
            }
        }

    }

    public static void addApplicationToTable(String name, String path, String scriptPath) throws SQLException {
        Connection connection = DriverManager.getConnection("jdbc:derby:applicationDB;create=true");

        String ADD_TO_TABLE_SQL_INSTRUCTIONS = "INSERT INTO APPLICATIONS (NAME, PATH, SCRIPTPATH) VALUES (?, ?, ?)";

        try (PreparedStatement addToTableSQLInstructions = connection.prepareStatement(ADD_TO_TABLE_SQL_INSTRUCTIONS)) {
            addToTableSQLInstructions.setString(1, name);
            addToTableSQLInstructions.setString(2, path);
            addToTableSQLInstructions.setString(3, scriptPath);
            addToTableSQLInstructions.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static ObservableList<Application> getAcitivitiesFromTable() throws SQLException {
        Connection connection = DriverManager.getConnection("jdbc:derby:applicationDB;create=true");

        ObservableList<Application> applications = FXCollections.observableArrayList();
        String SELECT_FROM_TABLE_INSTRUCTIONS = "SELECT * FROM APPLICATIONS";
        try (PreparedStatement query = connection.prepareStatement(SELECT_FROM_TABLE_INSTRUCTIONS);
            ResultSet result = query.executeQuery()) {
            while (result.next()) {
                Application application = new Application(
                        result.getString("NAME"),
                        result.getString("PATH"),
                        result.getString("SCRIPTPATH")
                );
                applications.add(application);
            }
        }
        return applications;
    }


}
